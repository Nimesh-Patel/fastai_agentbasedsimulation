<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="fsti-agent_8h" kind="file" language="C++">
    <compoundname>fsti-agent.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">gsl/gsl_rng.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="yes">utils/utils.h</includes>
    <includes refid="fsti-defs_8h" local="yes">fsti-defs.h</includes>
    <includes refid="fsti-defaults_8h" local="yes">fsti-defaults.h</includes>
    <includedby refid="fsti-agent_8c" local="yes">/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c</includedby>
    <includedby refid="fsti-simulation_8h" local="yes">/Users/eduardgrebe/dev/faststi-eduard/src/fsti-simulation.h</includedby>
    <includedby refid="fsti-report_8h" local="yes">/Users/eduardgrebe/dev/faststi-eduard/src/fsti-report.h</includedby>
    <includedby refid="fsti-events_8h" local="yes">/Users/eduardgrebe/dev/faststi-eduard/src/fsti-events.h</includedby>
    <includedby refid="fsti_8h" local="yes">/Users/eduardgrebe/dev/faststi-eduard/src/fsti.h</includedby>
    <includedby refid="fsti-simset_8c" local="yes">/Users/eduardgrebe/dev/faststi-eduard/src/fsti-simset.c</includedby>
    <includedby refid="fsti-tests_8c" local="yes">/Users/eduardgrebe/dev/faststi-eduard/src/fsti-tests.c</includedby>
    <incdepgraph>
      <node id="33">
        <label>stdbool.h</label>
      </node>
      <node id="38">
        <label>fsti-userdefs.h</label>
        <link refid="fsti-userdefs_8h_source"/>
      </node>
      <node id="36">
        <label>assert.h</label>
      </node>
      <node id="28">
        <label>stdint.h</label>
      </node>
      <node id="31">
        <label>stdlib.h</label>
      </node>
      <node id="32">
        <label>stddef.h</label>
      </node>
      <node id="35">
        <label>fsti-config.h</label>
        <link refid="fsti-config_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>string.h</label>
      </node>
      <node id="29">
        <label>utils/utils.h</label>
      </node>
      <node id="34">
        <label>fsti-defaults.h</label>
        <link refid="fsti-defaults_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>fsti-defs.h</label>
        <link refid="fsti-defs_8h_source"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h</label>
        <link refid="fsti-agent_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>gsl/gsl_rng.h</label>
      </node>
      <node id="26">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="41">
        <label>/Users/eduardgrebe/dev/faststi-eduard/src/fsti-events.h</label>
        <link refid="fsti-events_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h</label>
        <link refid="fsti-agent_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>/Users/eduardgrebe/dev/faststi-eduard/src/fsti-simset.h</label>
        <link refid="fsti-simset_8h_source"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>/Users/eduardgrebe/dev/faststi-eduard/src/fsti-simulation.h</label>
        <link refid="fsti-simulation_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>/Users/eduardgrebe/dev/faststi-eduard/src/fsti-report.h</label>
        <link refid="fsti-report_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>/Users/eduardgrebe/dev/faststi-eduard/src/fsti.h</label>
        <link refid="fsti_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structfsti__agent" prot="public">fsti_agent</innerclass>
    <innerclass refid="structfsti__ind__list" prot="public">fsti_ind_list</innerclass>
    <innerclass refid="structfsti__agent__arr" prot="public">fsti_agent_arr</innerclass>
    <innerclass refid="structfsti__agent__ind" prot="public">fsti_agent_ind</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="fsti-agent_8h_1a4c03aa904df401cdd442c95af046e217" prot="public" static="no">
        <name>FSTI_FOR</name>
        <param><defname>agent_ind</defname></param>
        <param><defname>agent</defname></param>
        <param><defname>code</defname></param>
        <initializer>do {                           \
        size_t *_it;                                                    \
        for (_it = fsti_agent_ind_begin(&amp;(agent_ind));                  \
             _it != fsti_agent_ind_end(&amp;(agent_ind)); _it++) {          \
            agent = fsti_agent_ind_arrp(&amp;(agent_ind), _it);             \
            { code }                                                    \
        }                                                               \
    } while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A macro called FSRI_FOR </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="15" column="9" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fsti-agent_8h_1a9cdc0f2e5160a06cdbbbd9a0807513f5" prot="public" static="no">
        <name>FSTI_FOR_IT</name>
        <param><defname>agent_ind</defname></param>
        <param><defname>it</defname></param>
        <param><defname>code</defname></param>
        <initializer>do {                           \
        for (it = fsti_agent_ind_begin(&amp;(agent_ind));                   \
             it != fsti_agent_ind_end(&amp;(agent_ind)); it++) {            \
            { code }                                                    \
        }                                                               \
    } while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="24" column="9" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="fsti-agent_8h_1a0d0890f5771bd3efa056881d37f4c6b9" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref></type>
        <definition>struct fsti_agent_arr fsti_saved_agent_arr</definition>
        <argsstring></argsstring>
        <name>fsti_saved_agent_arr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="365" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fsti-agent_8h_1ad24c55a9a2a07b7a0a07a0fb74be112e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_print_csv</definition>
        <argsstring>(FILE *f, unsigned id, struct fsti_agent *agent)</argsstring>
        <name>fsti_agent_print_csv</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>id</declname>
        </param>
        <param>
          <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
          <declname>agent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Description of the fsti_agent_print_csv function </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="81" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a067437e70d5fe4d1e6f139bab513c6ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_print_pretty</definition>
        <argsstring>(FILE *f, unsigned id, struct fsti_agent *agent)</argsstring>
        <name>fsti_agent_print_pretty</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>id</declname>
        </param>
        <param>
          <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
          <declname>agent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="82" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1ae4a719a71a7f8a2687d05976340b1ffb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>_Bool</type>
        <definition>_Bool fsti_agent_has_partner</definition>
        <argsstring>(const struct fsti_agent *agent)</argsstring>
        <name>fsti_agent_has_partner</name>
        <param>
          <type>const struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
          <declname>agent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="83" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="22" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1afaf3c076c60db61e182fb1e5a8eabc77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_make_half_partner</definition>
        <argsstring>(struct fsti_agent *a, struct fsti_agent *b)</argsstring>
        <name>fsti_agent_make_half_partner</name>
        <param>
          <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="84" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1aab565f3b1fa1cb77b6a83efd3faa72e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_make_partners</definition>
        <argsstring>(struct fsti_agent *a, struct fsti_agent *b)</argsstring>
        <name>fsti_agent_make_partners</name>
        <param>
          <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="85" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a69108c3779a3689185b833a70f589225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_break_half_partner</definition>
        <argsstring>(struct fsti_agent *a, struct fsti_agent *b)</argsstring>
        <name>fsti_agent_break_half_partner</name>
        <param>
          <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="86" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="43" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a66a819f51531e6f89f92addab960ae3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_break_partners</definition>
        <argsstring>(struct fsti_agent *a, struct fsti_agent *b)</argsstring>
        <name>fsti_agent_break_partners</name>
        <param>
          <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="87" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="56" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a0624a840237ec82520be71b241220226" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float fsti_agent_default_distance</definition>
        <argsstring>(const struct fsti_agent *a, const struct fsti_agent *b)</argsstring>
        <name>fsti_agent_default_distance</name>
        <param>
          <type>const struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="88" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="64" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a63a22afc13737a55174adb97f2cbcfc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_arr_add_dependency</definition>
        <argsstring>(struct fsti_agent_arr *agent_arr, struct fsti_agent_ind *agent_ind)</argsstring>
        <name>fsti_agent_arr_add_dependency</name>
        <param>
          <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref> *</type>
          <declname>agent_arr</declname>
        </param>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>agent_ind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="89" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="76" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a87de33f5c064440c162d0c8d0f9ccbf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_arr_fill_n</definition>
        <argsstring>(struct fsti_agent_arr *agent_arr, size_t n)</argsstring>
        <name>fsti_agent_arr_fill_n</name>
        <param>
          <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref> *</type>
          <declname>agent_arr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="90" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="88" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1ab657b71989567b40adc4ccea49292540" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_arr_init</definition>
        <argsstring>(struct fsti_agent_arr *agent_arr)</argsstring>
        <name>fsti_agent_arr_init</name>
        <param>
          <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref> *</type>
          <declname>agent_arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="91" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a2dc08a5f50e57b979f50f6efb927d57c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_arr_init_n</definition>
        <argsstring>(struct fsti_agent_arr *agent_arr, size_t n)</argsstring>
        <name>fsti_agent_arr_init_n</name>
        <param>
          <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref> *</type>
          <declname>agent_arr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="92" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="97" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a30c755dbd7cd8e98b76ebe65b8dc54a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
        <definition>struct fsti_agent* fsti_agent_arr_begin</definition>
        <argsstring>(struct fsti_agent_arr *agent_arr)</argsstring>
        <name>fsti_agent_arr_begin</name>
        <param>
          <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref> *</type>
          <declname>agent_arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="93" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a1a5fc4621ece587a603b9b970bc3bd7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
        <definition>struct fsti_agent* fsti_agent_arr_end</definition>
        <argsstring>(struct fsti_agent_arr *agent_arr)</argsstring>
        <name>fsti_agent_arr_end</name>
        <param>
          <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref> *</type>
          <declname>agent_arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="94" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a9f01e2df0acb48b1e9cef63d4314c209" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
        <definition>struct fsti_agent* fsti_agent_arr_at</definition>
        <argsstring>(struct fsti_agent_arr *agent_arr, size_t index)</argsstring>
        <name>fsti_agent_arr_at</name>
        <param>
          <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref> *</type>
          <declname>agent_arr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="95" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="125" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1aaad30933ebf477fc44ee2f7123d335b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
        <definition>struct fsti_agent* fsti_agent_arr_front</definition>
        <argsstring>(struct fsti_agent_arr *agent_arr)</argsstring>
        <name>fsti_agent_arr_front</name>
        <param>
          <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref> *</type>
          <declname>agent_arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="96" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a88eb4bd7a7df9dcbc5b57d3e3e22f9c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
        <definition>struct fsti_agent* fsti_agent_arr_back</definition>
        <argsstring>(struct fsti_agent_arr *agent_arr)</argsstring>
        <name>fsti_agent_arr_back</name>
        <param>
          <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref> *</type>
          <declname>agent_arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="97" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a8ea9850f51ba1cc3f842f3730cf22139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
        <definition>struct fsti_agent* fsti_agent_partner_get</definition>
        <argsstring>(struct fsti_agent_arr *agent_arr, struct fsti_agent *agent, size_t index)</argsstring>
        <name>fsti_agent_partner_get</name>
        <param>
          <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref> *</type>
          <declname>agent_arr</declname>
        </param>
        <param>
          <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
          <declname>agent</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="98" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="141" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1abe4c0c13ceb1a50eb8d9223a7122f269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
        <definition>struct fsti_agent* fsti_agent_partner_get0</definition>
        <argsstring>(struct fsti_agent_arr *agent_arr, struct fsti_agent *agent)</argsstring>
        <name>fsti_agent_partner_get0</name>
        <param>
          <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref> *</type>
          <declname>agent_arr</declname>
        </param>
        <param>
          <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
          <declname>agent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="99" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="151" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a0cf9bb69026e48287e83f9d73841f90f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_arr_push</definition>
        <argsstring>(struct fsti_agent_arr *agent_arr, const struct fsti_agent *agent)</argsstring>
        <name>fsti_agent_arr_push</name>
        <param>
          <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref> *</type>
          <declname>agent_arr</declname>
        </param>
        <param>
          <type>const struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
          <declname>agent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="100" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="184" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a140245276760c5ca1467b816dfdb16d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
        <definition>struct fsti_agent* fsti_agent_arr_pop</definition>
        <argsstring>(struct fsti_agent_arr *agent_arr)</argsstring>
        <name>fsti_agent_arr_pop</name>
        <param>
          <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref> *</type>
          <declname>agent_arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="101" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="199" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1ad710a67a71582f5e8a63490c1afe3a3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_ind_fill_n</definition>
        <argsstring>(struct fsti_agent_ind *agent_ind, size_t n)</argsstring>
        <name>fsti_agent_ind_fill_n</name>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>agent_ind</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="102" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="206" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a863d835b0643a8d62d8621bd512fd902" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_ind_init_n</definition>
        <argsstring>(struct fsti_agent_ind *agent_ind, struct fsti_agent_arr *agent_arr, size_t n)</argsstring>
        <name>fsti_agent_ind_init_n</name>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>agent_ind</declname>
        </param>
        <param>
          <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref> *</type>
          <declname>agent_arr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="103" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="215" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a15fb161e3b2c757f6dc7d67af4e6ef3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_ind_init</definition>
        <argsstring>(struct fsti_agent_ind *agent_ind, struct fsti_agent_arr *agent_arr)</argsstring>
        <name>fsti_agent_ind_init</name>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>agent_ind</declname>
        </param>
        <param>
          <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref> *</type>
          <declname>agent_arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="106" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="231" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1af8ec082c043d0719f2933f78c9b74879" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t *</type>
        <definition>size_t* fsti_agent_ind_begin</definition>
        <argsstring>(struct fsti_agent_ind *agent_ind)</argsstring>
        <name>fsti_agent_ind_begin</name>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>agent_ind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="108" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="237" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a0a007fca1a85b26dc9f890b5c9f5649a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t *</type>
        <definition>size_t* fsti_agent_ind_end</definition>
        <argsstring>(struct fsti_agent_ind *agent_ind)</argsstring>
        <name>fsti_agent_ind_end</name>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>agent_ind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="109" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="242" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a4c099994dc5a8cedc1de073fa64bfbcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t *</type>
        <definition>size_t* fsti_agent_ind_at</definition>
        <argsstring>(struct fsti_agent_ind *agent_ind, size_t index)</argsstring>
        <name>fsti_agent_ind_at</name>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>agent_ind</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="110" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="247" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1aeb0ffefe572b09e4e3d8e33571e256da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_ind_push</definition>
        <argsstring>(struct fsti_agent_ind *agent_ind, size_t index)</argsstring>
        <name>fsti_agent_ind_push</name>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>agent_ind</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="111" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="265" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a40bb88f7ef7f1adc5b3bf76964f5ce03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t fsti_agent_ind_pop</definition>
        <argsstring>(struct fsti_agent_ind *agent_ind)</argsstring>
        <name>fsti_agent_ind_pop</name>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>agent_ind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="112" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="275" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a9005e4c20f02aff3ad90dafbaa630583" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_ind_remove</definition>
        <argsstring>(struct fsti_agent_ind *agent_ind, size_t *it)</argsstring>
        <name>fsti_agent_ind_remove</name>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>agent_ind</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="113" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="282" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a0e45e82b7f4f019b1813daf04717b894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
        <definition>struct fsti_agent* fsti_agent_ind_arr</definition>
        <argsstring>(struct fsti_agent_ind *agent_ind, size_t index)</argsstring>
        <name>fsti_agent_ind_arr</name>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>agent_ind</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="114" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a0d3fcfadb1159b63508be133b30f8df7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
        <definition>struct fsti_agent* fsti_agent_ind_arrp</definition>
        <argsstring>(struct fsti_agent_ind *agent_ind, size_t *it)</argsstring>
        <name>fsti_agent_ind_arrp</name>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>agent_ind</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="116" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1ade2459f6fc82794b3fe9bca7585bdfa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
        <definition>struct fsti_agent* fsti_agent_ind_arr_front</definition>
        <argsstring>(struct fsti_agent_ind *agent_ind)</argsstring>
        <name>fsti_agent_ind_arr_front</name>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>agent_ind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1aac56f2d510cd312bdb5b32a221e00309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structfsti__agent" kindref="compound">fsti_agent</ref> *</type>
        <definition>struct fsti_agent* fsti_agent_ind_arr_back</definition>
        <argsstring>(struct fsti_agent_ind *agent_ind)</argsstring>
        <name>fsti_agent_ind_arr_back</name>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>agent_ind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1ae9ffb7f208aa2ca7f0e5a1999ae69425" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_arr_copy</definition>
        <argsstring>(struct fsti_agent_arr *dest, struct fsti_agent_arr *src, bool reset_members)</argsstring>
        <name>fsti_agent_arr_copy</name>
        <param>
          <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reset_members</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="120" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="301" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1ae598f299bc63165f2f0b5c9d5c72e52c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_ind_shuffle</definition>
        <argsstring>(struct fsti_agent_ind *agent_ind, gsl_rng *rng)</argsstring>
        <name>fsti_agent_ind_shuffle</name>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>agent_ind</declname>
        </param>
        <param>
          <type>gsl_rng *</type>
          <declname>rng</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="123" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="289" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a6681f5dfe9ce93defe0d395774010080" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_ind_copy</definition>
        <argsstring>(struct fsti_agent_ind *dest, struct fsti_agent_ind *src)</argsstring>
        <name>fsti_agent_ind_copy</name>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="124" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="317" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a6ea0014798a460e51b30b2d8af0dda25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_ind_clear</definition>
        <argsstring>(struct fsti_agent_ind *agent_ind)</argsstring>
        <name>fsti_agent_ind_clear</name>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>agent_ind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="125" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="340" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1ab9adb18f274475832c5a763be7d001d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_ind_free</definition>
        <argsstring>(struct fsti_agent_ind *agent_ind)</argsstring>
        <name>fsti_agent_ind_free</name>
        <param>
          <type>struct <ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref> *</type>
          <declname>agent_ind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="126" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="345" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1a0c1f310e7cd98b4122a4348b0ec26b4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_arr_free</definition>
        <argsstring>(struct fsti_agent_arr *agent_arr)</argsstring>
        <name>fsti_agent_arr_free</name>
        <param>
          <type>struct <ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref> *</type>
          <declname>agent_arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="127" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="350" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="fsti-agent_8h_1aa9fa3865ab9658915f20e4212ca4cbe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fsti_agent_test</definition>
        <argsstring>(struct test_group *tg)</argsstring>
        <name>fsti_agent_test</name>
        <param>
          <type>struct test_group *</type>
          <declname>tg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h" line="128" column="1" bodyfile="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.c" bodystart="365" bodyend="541"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>FSTI_AGENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSTI_AGENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_rng.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;utils/utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fsti-defs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fsti-defaults.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor">#define<sp/>FSTI_FOR(agent_ind,<sp/>agent,<sp/>code)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>*_it;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(_it<sp/>=<sp/>fsti_agent_ind_begin(&amp;(agent_ind));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_it<sp/>!=<sp/>fsti_agent_ind_end(&amp;(agent_ind));<sp/>_it++)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent<sp/>=<sp/>fsti_agent_ind_arrp(&amp;(agent_ind),<sp/>_it);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>code<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSTI_FOR_IT(agent_ind,<sp/>it,<sp/>code)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(it<sp/>=<sp/>fsti_agent_ind_begin(&amp;(agent_ind));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>fsti_agent_ind_end(&amp;(agent_ind));<sp/>it++)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>code<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="structfsti__agent" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>sex;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>sex_preferred;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>orientation;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>age;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>birth_date;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>birthday;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>age_group;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>infected;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>infected_date;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cured;<sp/></highlight><highlight class="comment">//<sp/>Date<sp/>last<sp/>cured<sp/>of<sp/>last<sp/>infection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>date_death;<sp/></highlight><highlight class="comment">//<sp/>0<sp/>if<sp/>still<sp/>alive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>cause_of_death;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>partners[FSTI_MAX_PARTNERS];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_partners;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>FSTI_AGENT_FIELDS</highlight></codeline>
<codeline lineno="58"><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structfsti__ind__list" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__ind__list" kindref="compound">fsti_ind_list</ref><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*ind;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__ind__list" kindref="compound">fsti_ind_list</ref><sp/>*next;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structfsti__agent__arr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*agents;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__ind__list" kindref="compound">fsti_ind_list</ref><sp/>*ind_list;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="structfsti__agent__ind" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*indices;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*agent_arr;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>fsti_saved_agent_arr;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_print_csv(FILE<sp/>*f,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*agent);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_print_pretty(FILE<sp/>*f,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*agent);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">_Bool<sp/>fsti_agent_has_partner(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*agent);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_make_half_partner(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*a,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*b);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_make_partners(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*a,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*b);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_break_half_partner(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*a,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*b);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_break_partners(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*a,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*b);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fsti_agent_default_distance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*b);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_arr_add_dependency(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*agent_arr,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*agent_ind);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_arr_fill_n(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*agent_arr,<sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_arr_init(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*agent_arr);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_arr_init_n(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*agent_arr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*fsti_agent_arr_begin(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*agent_arr);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*fsti_agent_arr_end(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*agent_arr);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*fsti_agent_arr_at(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*agent_arr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*fsti_agent_arr_front(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*agent_arr);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*fsti_agent_arr_back(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*agent_arr);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*fsti_agent_partner_get(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*agent_arr,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*agent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*fsti_agent_partner_get0(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*agent_arr,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*agent);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_arr_push(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*agent_arr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*agent);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*fsti_agent_arr_pop(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*agent_arr);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_ind_fill_n(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*agent_ind,<sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_ind_init_n(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*agent_ind,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*agent_arr,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_ind_init(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*agent_ind,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*agent_arr);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*fsti_agent_ind_begin(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*agent_ind);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*fsti_agent_ind_end(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*agent_ind);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*fsti_agent_ind_at(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*agent_ind,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_ind_push(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*agent_ind,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>fsti_agent_ind_pop(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*agent_ind);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_ind_remove(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*agent_ind,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*it);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*<sp/>fsti_agent_ind_arr(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*agent_ind,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*<sp/>fsti_agent_ind_arrp(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*agent_ind,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*it);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*<sp/>fsti_agent_ind_arr_front(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*agent_ind);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfsti__agent" kindref="compound">fsti_agent</ref><sp/>*<sp/>fsti_agent_ind_arr_back(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*agent_ind);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_arr_copy(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*dest,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*src,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reset_members);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_ind_shuffle(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*agent_ind,<sp/>gsl_rng<sp/>*rng);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_ind_copy(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*dest,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*src);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_ind_clear(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*agent_ind);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_ind_free(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__ind" kindref="compound">fsti_agent_ind</ref><sp/>*agent_ind);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_arr_free(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfsti__agent__arr" kindref="compound">fsti_agent_arr</ref><sp/>*agent_arr);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fsti_agent_test(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>test_group<sp/>*tg);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/eduardgrebe/dev/faststi-eduard/src/fsti-agent.h"/>
  </compounddef>
</doxygen>
